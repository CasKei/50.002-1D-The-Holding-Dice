/*
   This file was generated automatically by Alchitry Labs version 1.2.7.
   Do not edit this file directly. Instead edit the original Lucid source.
   This is a temporary file and any changes made to it will be destroyed.
*/

module au_top_0 (
    input clk,
    input rst_n,
    output reg [7:0] led,
    input usb_rx,
    output reg usb_tx,
    output reg [23:0] io_led,
    output reg [7:0] io_seg,
    output reg [3:0] io_sel,
    input [4:0] io_button,
    input [23:0] io_dip
  );
  
  
  
  reg rst;
  
  wire [1-1:0] M_reset_cond_out;
  reg [1-1:0] M_reset_cond_in;
  reset_conditioner_1 reset_cond (
    .clk(clk),
    .in(M_reset_cond_in),
    .out(M_reset_cond_out)
  );
  
  wire [1-1:0] M_game_playerturn;
  wire [8-1:0] M_game_p1curr;
  wire [8-1:0] M_game_p1acc;
  wire [8-1:0] M_game_p2curr;
  wire [8-1:0] M_game_p2acc;
  wire [3-1:0] M_game_currdice;
  reg [1-1:0] M_game_p1rollbtn;
  reg [1-1:0] M_game_p1holdbtn;
  reg [1-1:0] M_game_p2rollbtn;
  reg [1-1:0] M_game_p2holdbtn;
  game_CU_2 game (
    .clk(clk),
    .rst(io_button[1+0-:1]),
    .p1rollbtn(M_game_p1rollbtn),
    .p1holdbtn(M_game_p1holdbtn),
    .p2rollbtn(M_game_p2rollbtn),
    .p2holdbtn(M_game_p2holdbtn),
    .playerturn(M_game_playerturn),
    .p1curr(M_game_p1curr),
    .p1acc(M_game_p1acc),
    .p2curr(M_game_p2curr),
    .p2acc(M_game_p2acc),
    .currdice(M_game_currdice)
  );
  
  wire [7-1:0] M_seg_segs;
  reg [3-1:0] M_seg_char;
  dice_seg_3 seg (
    .char(M_seg_char),
    .segs(M_seg_segs)
  );
  
  always @* begin
    M_reset_cond_in = ~rst_n;
    rst = M_reset_cond_out;
    usb_tx = usb_rx;
    led = 8'h00;
    io_led = 24'h000000;
    io_seg = 8'hff;
    io_sel = 4'hf;
    M_game_p1rollbtn = io_button[3+0-:1];
    M_game_p2rollbtn = io_button[4+0-:1];
    M_game_p1holdbtn = io_button[0+0-:1];
    M_game_p2holdbtn = io_button[2+0-:1];
    M_seg_char = M_game_currdice;
    io_led[0+0+0-:1] = M_game_playerturn;
    io_led[0+7+0-:1] = ~M_game_playerturn;
    io_led[8+7-:8] = M_game_p2curr;
    io_led[16+7-:8] = M_game_p1curr;
    io_seg = ~M_seg_segs;
    io_sel = 4'he;
  end
endmodule
